// Code generated by ogen, DO NOT EDIT.

package contentfulmanagement

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// ActivateContentType implements activateContentType operation.
	//
	// Activate a content type.
	//
	// PUT /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/published
	ActivateContentType(ctx context.Context, params ActivateContentTypeParams) (ActivateContentTypeRes, error)
	// CreateAppDefinition implements createAppDefinition operation.
	//
	// Create an app definition.
	//
	// POST /organizations/{organization_id}/app_definitions
	CreateAppDefinition(ctx context.Context, req *AppDefinitionFields, params CreateAppDefinitionParams) (CreateAppDefinitionRes, error)
	// CreateDeliveryApiKey implements createDeliveryApiKey operation.
	//
	// Create a delivery api key.
	//
	// POST /spaces/{space_id}/api_keys
	CreateDeliveryApiKey(ctx context.Context, req *ApiKeyRequestFields, params CreateDeliveryApiKeyParams) (CreateDeliveryApiKeyRes, error)
	// CreatePersonalAccessToken implements createPersonalAccessToken operation.
	//
	// Create a personal access token.
	//
	// POST /users/me/access_tokens
	CreatePersonalAccessToken(ctx context.Context, req *PersonalAccessTokenRequestFields) (CreatePersonalAccessTokenRes, error)
	// CreateRole implements createRole operation.
	//
	// Create a role.
	//
	// POST /spaces/{space_id}/roles
	CreateRole(ctx context.Context, req *RoleFields, params CreateRoleParams) (CreateRoleRes, error)
	// CreateWebhookDefinition implements createWebhookDefinition operation.
	//
	// Create a webhook definition.
	//
	// POST /spaces/{space_id}/webhook_definitions
	CreateWebhookDefinition(ctx context.Context, req *WebhookDefinitionFields, params CreateWebhookDefinitionParams) (CreateWebhookDefinitionRes, error)
	// DeactivateContentType implements deactivateContentType operation.
	//
	// Deactivate a content type.
	//
	// DELETE /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/published
	DeactivateContentType(ctx context.Context, params DeactivateContentTypeParams) (DeactivateContentTypeRes, error)
	// DeleteAppDefinition implements deleteAppDefinition operation.
	//
	// Delete an app definition.
	//
	// DELETE /organizations/{organization_id}/app_definitions/{app_definition_id}
	DeleteAppDefinition(ctx context.Context, params DeleteAppDefinitionParams) (DeleteAppDefinitionRes, error)
	// DeleteAppDefinitionResourceProvider implements deleteAppDefinitionResourceProvider operation.
	//
	// Delete an app resource provider definition.
	//
	// DELETE /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider
	DeleteAppDefinitionResourceProvider(ctx context.Context, params DeleteAppDefinitionResourceProviderParams) (DeleteAppDefinitionResourceProviderRes, error)
	// DeleteAppDefinitionResourceType implements deleteAppDefinitionResourceType operation.
	//
	// Delete an app resource provider definition.
	//
	// DELETE /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider/resource_types/{resource_type_id}
	DeleteAppDefinitionResourceType(ctx context.Context, params DeleteAppDefinitionResourceTypeParams) (DeleteAppDefinitionResourceTypeRes, error)
	// DeleteAppInstallation implements deleteAppInstallation operation.
	//
	// Uninstall an app.
	//
	// DELETE /spaces/{space_id}/environments/{environment_id}/app_installations/{app_definition_id}
	DeleteAppInstallation(ctx context.Context, params DeleteAppInstallationParams) (DeleteAppInstallationRes, error)
	// DeleteContentType implements deleteContentType operation.
	//
	// Delete a content type.
	//
	// DELETE /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}
	DeleteContentType(ctx context.Context, params DeleteContentTypeParams) (DeleteContentTypeRes, error)
	// DeleteDeliveryApiKey implements deleteDeliveryApiKey operation.
	//
	// Delete a single delivery api key.
	//
	// DELETE /spaces/{space_id}/api_keys/{api_key_id}
	DeleteDeliveryApiKey(ctx context.Context, params DeleteDeliveryApiKeyParams) (DeleteDeliveryApiKeyRes, error)
	// DeleteExtension implements deleteExtension operation.
	//
	// Delete an extension.
	//
	// DELETE /spaces/{space_id}/environments/{environment_id}/extensions/{extension_id}
	DeleteExtension(ctx context.Context, params DeleteExtensionParams) (DeleteExtensionRes, error)
	// DeleteRole implements deleteRole operation.
	//
	// Delete a role.
	//
	// DELETE /spaces/{space_id}/roles/{role_id}
	DeleteRole(ctx context.Context, params DeleteRoleParams) (DeleteRoleRes, error)
	// DeleteWebhookDefinition implements deleteWebhookDefinition operation.
	//
	// Delete a webhook definition.
	//
	// DELETE /spaces/{space_id}/webhook_definitions/{webhook_definition_id}
	DeleteWebhookDefinition(ctx context.Context, params DeleteWebhookDefinitionParams) (DeleteWebhookDefinitionRes, error)
	// GetAppDefinition implements getAppDefinition operation.
	//
	// Get one app definition.
	//
	// GET /organizations/{organization_id}/app_definitions/{app_definition_id}
	GetAppDefinition(ctx context.Context, params GetAppDefinitionParams) (GetAppDefinitionRes, error)
	// GetAppDefinitionResourceProvider implements getAppDefinitionResourceProvider operation.
	//
	// Get one app resource provider definition.
	//
	// GET /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider
	GetAppDefinitionResourceProvider(ctx context.Context, params GetAppDefinitionResourceProviderParams) (GetAppDefinitionResourceProviderRes, error)
	// GetAppDefinitionResourceType implements getAppDefinitionResourceType operation.
	//
	// Get one app resource ttype definition.
	//
	// GET /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider/resource_types/{resource_type_id}
	GetAppDefinitionResourceType(ctx context.Context, params GetAppDefinitionResourceTypeParams) (GetAppDefinitionResourceTypeRes, error)
	// GetAppInstallation implements getAppInstallation operation.
	//
	// Get one app installation.
	//
	// GET /spaces/{space_id}/environments/{environment_id}/app_installations/{app_definition_id}
	GetAppInstallation(ctx context.Context, params GetAppInstallationParams) (GetAppInstallationRes, error)
	// GetAuthenticatedUser implements getAuthenticatedUser operation.
	//
	// Get the authenticated user.
	//
	// GET /users/me
	GetAuthenticatedUser(ctx context.Context) (GetAuthenticatedUserRes, error)
	// GetContentType implements getContentType operation.
	//
	// Get a content type.
	//
	// GET /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}
	GetContentType(ctx context.Context, params GetContentTypeParams) (GetContentTypeRes, error)
	// GetDeliveryApiKey implements getDeliveryApiKey operation.
	//
	// Get a single delivery api key.
	//
	// GET /spaces/{space_id}/api_keys/{api_key_id}
	GetDeliveryApiKey(ctx context.Context, params GetDeliveryApiKeyParams) (GetDeliveryApiKeyRes, error)
	// GetEditorInterface implements getEditorInterface operation.
	//
	// Get the editor interface for a content type.
	//
	// GET /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/editor_interface
	GetEditorInterface(ctx context.Context, params GetEditorInterfaceParams) (GetEditorInterfaceRes, error)
	// GetExtension implements getExtension operation.
	//
	// Get a single extension.
	//
	// GET /spaces/{space_id}/environments/{environment_id}/extensions/{extension_id}
	GetExtension(ctx context.Context, params GetExtensionParams) (GetExtensionRes, error)
	// GetPersonalAccessToken implements getPersonalAccessToken operation.
	//
	// Get a single personal access token.
	//
	// GET /users/me/access_tokens/{access_token_id}
	GetPersonalAccessToken(ctx context.Context, params GetPersonalAccessTokenParams) (GetPersonalAccessTokenRes, error)
	// GetPreviewApiKey implements getPreviewApiKey operation.
	//
	// Get a single preview api key.
	//
	// GET /spaces/{space_id}/preview_api_keys/{preview_api_key_id}
	GetPreviewApiKey(ctx context.Context, params GetPreviewApiKeyParams) (GetPreviewApiKeyRes, error)
	// GetRole implements getRole operation.
	//
	// Get a role.
	//
	// GET /spaces/{space_id}/roles/{role_id}
	GetRole(ctx context.Context, params GetRoleParams) (GetRoleRes, error)
	// GetSpaceEnablements implements getSpaceEnablements operation.
	//
	// Get enablements for a space.
	//
	// GET /spaces/{space_id}/enablements
	GetSpaceEnablements(ctx context.Context, params GetSpaceEnablementsParams) (GetSpaceEnablementsRes, error)
	// GetWebhookDefinition implements getWebhookDefinition operation.
	//
	// Get a webhook definition.
	//
	// GET /spaces/{space_id}/webhook_definitions/{webhook_definition_id}
	GetWebhookDefinition(ctx context.Context, params GetWebhookDefinitionParams) (GetWebhookDefinitionRes, error)
	// PutAppDefinition implements putAppDefinition operation.
	//
	// Create or update an app definition.
	//
	// PUT /organizations/{organization_id}/app_definitions/{app_definition_id}
	PutAppDefinition(ctx context.Context, req *AppDefinitionFields, params PutAppDefinitionParams) (PutAppDefinitionRes, error)
	// PutAppDefinitionResourceProvider implements putAppDefinitionResourceProvider operation.
	//
	// Create or update an app resource provider definition.
	//
	// PUT /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider
	PutAppDefinitionResourceProvider(ctx context.Context, req *ResourceProviderRequest, params PutAppDefinitionResourceProviderParams) (PutAppDefinitionResourceProviderRes, error)
	// PutAppDefinitionResourceType implements putAppDefinitionResourceType operation.
	//
	// Create or update an app resource provider type definition.
	//
	// PUT /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider/resource_types/{resource_type_id}
	PutAppDefinitionResourceType(ctx context.Context, req *ResourceTypeFields, params PutAppDefinitionResourceTypeParams) (PutAppDefinitionResourceTypeRes, error)
	// PutAppInstallation implements putAppInstallation operation.
	//
	// Install or update an app.
	//
	// PUT /spaces/{space_id}/environments/{environment_id}/app_installations/{app_definition_id}
	PutAppInstallation(ctx context.Context, req *AppInstallationFields, params PutAppInstallationParams) (PutAppInstallationRes, error)
	// PutContentType implements putContentType operation.
	//
	// Update a content type.
	//
	// PUT /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}
	PutContentType(ctx context.Context, req *ContentTypeRequestFields, params PutContentTypeParams) (PutContentTypeRes, error)
	// PutEditorInterface implements putEditorInterface operation.
	//
	// Update the editor interface for a content type.
	//
	// PUT /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/editor_interface
	PutEditorInterface(ctx context.Context, req *EditorInterfaceFields, params PutEditorInterfaceParams) (PutEditorInterfaceRes, error)
	// PutExtension implements putExtension operation.
	//
	// Create or update an extension.
	//
	// PUT /spaces/{space_id}/environments/{environment_id}/extensions/{extension_id}
	PutExtension(ctx context.Context, req *ExtensionFields, params PutExtensionParams) (PutExtensionRes, error)
	// PutSpaceEnablements implements putSpaceEnablements operation.
	//
	// Update enablements for a space.
	//
	// PUT /spaces/{space_id}/enablements
	PutSpaceEnablements(ctx context.Context, req *SpaceEnablementFields, params PutSpaceEnablementsParams) (PutSpaceEnablementsRes, error)
	// RevokePersonalAccessToken implements revokePersonalAccessToken operation.
	//
	// Revoke a personal access token.
	//
	// PUT /users/me/access_tokens/{access_token_id}/revoked
	RevokePersonalAccessToken(ctx context.Context, params RevokePersonalAccessTokenParams) (RevokePersonalAccessTokenRes, error)
	// UpdateDeliveryApiKey implements updateDeliveryApiKey operation.
	//
	// Update a single delivery api key.
	//
	// PUT /spaces/{space_id}/api_keys/{api_key_id}
	UpdateDeliveryApiKey(ctx context.Context, req *ApiKeyRequestFields, params UpdateDeliveryApiKeyParams) (UpdateDeliveryApiKeyRes, error)
	// UpdateRole implements updateRole operation.
	//
	// Update a role.
	//
	// PUT /spaces/{space_id}/roles/{role_id}
	UpdateRole(ctx context.Context, req *RoleFields, params UpdateRoleParams) (UpdateRoleRes, error)
	// UpdateWebhookDefinition implements updateWebhookDefinition operation.
	//
	// Update a webhook definition.
	//
	// PUT /spaces/{space_id}/webhook_definitions/{webhook_definition_id}
	UpdateWebhookDefinition(ctx context.Context, req *WebhookDefinitionFields, params UpdateWebhookDefinitionParams) (UpdateWebhookDefinitionRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
