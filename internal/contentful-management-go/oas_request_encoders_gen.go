// Code generated by ogen, DO NOT EDIT.

package contentfulmanagement

import (
	"bytes"
	"net/http"

	"github.com/go-faster/jx"

	ht "github.com/ogen-go/ogen/http"
)

func encodeCreateAppDefinitionRequest(
	req *AppDefinitionFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeCreateDeliveryApiKeyRequest(
	req *ApiKeyRequestFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeCreatePersonalAccessTokenRequest(
	req *PersonalAccessTokenRequestFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeCreateRoleRequest(
	req *RoleFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeCreateWebhookDefinitionRequest(
	req *WebhookDefinitionFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutAppDefinitionRequest(
	req *AppDefinitionFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutAppDefinitionResourceProviderRequest(
	req *ResourceProviderRequest,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutAppDefinitionResourceTypeRequest(
	req *ResourceTypeFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutAppInstallationRequest(
	req *AppInstallationFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutContentTypeRequest(
	req *ContentTypeRequestFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutEditorInterfaceRequest(
	req *EditorInterfaceFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutExtensionRequest(
	req *ExtensionFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodePutSpaceEnablementsRequest(
	req *SpaceEnablementFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeUpdateDeliveryApiKeyRequest(
	req *ApiKeyRequestFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeUpdateRoleRequest(
	req *RoleFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}

func encodeUpdateWebhookDefinitionRequest(
	req *WebhookDefinitionFields,
	r *http.Request,
) error {
	const contentType = "application/vnd.contentful.management.v1+json"
	e := new(jx.Encoder)
	{
		req.Encode(e)
	}
	encoded := e.Bytes()
	ht.SetBody(r, bytes.NewReader(encoded), contentType)
	return nil
}
