openapi: '3.0.3'
info:
  title: Contentful Management API
  version: '0.1'
servers:
  - url: https://api.contentful.com
components:
  schemas:
    ErrorSysId:
      type: string
      enum:
        - NotFound
    ErrorSys:
      type: object
      properties:
        type:
          type: string
          enum:
            - Error
        id:
          type: string
      required:
        - type
        - id
    ErrorFields:
      type: object
      properties:
        message:
          type: string
        details: {}
    Error:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/ErrorSys'
          required:
            - sys
        - $ref: '#/components/schemas/ErrorFields'
    BaseSys:
      type: object
      properties:
        type:
          type: string
      required:
        - type
    BaseSysWithId:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
      required:
        - type
        - id
    BaseSysWithIdAndVersion:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithId'
        - type: object
          properties:
            version:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
          required:
            - version
    BaseSysWithIdAndVersionAndPublishedVersion:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersion'
        - type: object
          properties:
            publishedVersion:
              type: integer
            publishedAt:
              type: string
              format: date-time
    UserSys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersion'
        - type: object
          properties:
            type:
              type: string
              enum:
                - User
    UserFields:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - firstName
        - lastName
    User:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/UserSys'
          required:
            - sys
        - $ref: '#/components/schemas/UserFields'
    ApiKeySys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersion'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ApiKey
    ApiKeyFields:
      allOf:
        - $ref: '#/components/schemas/ApiKeyRequestFields'
        - type: object
          properties:
            accessToken:
              type: string
            preview_api_key:
              type: object
              properties:
                sys:
                  allOf:
                    - $ref: '#/components/schemas/LinkSys'
                    - type: object
                      properties:
                        linkType:
                          type: string
                          enum:
                            - PreviewApiKey
              required:
                - sys
          required:
            - accessToken
    ApiKeyRequestFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentLink'
      required:
        - name
    ApiKey:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/ApiKeySys'
          required:
            - sys
        - $ref: '#/components/schemas/ApiKeyFields'
    AppInstallationSys:
      allOf:
        - $ref: '#/components/schemas/BaseSys'
        - type: object
          properties:
            type:
              type: string
              enum:
                - AppInstallation
    AppInstallationFields:
      type: object
      properties:
        parameters: {}
    AppInstallation:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/AppInstallationSys'
          required:
            - sys
        - $ref: '#/components/schemas/AppInstallationFields'
    ContentTypeSys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersionAndPublishedVersion'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ContentType
    ContentTypeFields:
      allOf:
        - $ref: '#/components/schemas/ContentTypeRequestFields'
        - type: object
          properties:
            description:
              type: string
              nullable: true
            displayField:
              type: string
              nullable: true
    ContentTypeRequestFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        displayField:
          type: string
        fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              type:
                type: string
              linkType:
                type: string
              items:
                type: object
                properties:
                  type:
                    type: string
                  linkType:
                    type: string
                  validations: 
                    type: array
                    items: {}
              localized:
                type: boolean
              omitted:
                type: boolean
              required:
                type: boolean
              disabled:
                type: boolean
              defaultValue: {}
              validations: 
                type: array
                items: {}
            required:
              - id
              - name
              - type
      required:
        - name
        - description
        - displayField
        - fields
    ContentType:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/ContentTypeSys'
          required:
            - sys
        - $ref: '#/components/schemas/ContentTypeFields'
    EditorInterfaceSys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersion'
        - type: object
          properties:
            type:
              type: string
              enum:
                - EditorInterface
    EditorInterfaceFields:
      type: object
      properties:
        controls:
          type: array
          nullable: true
          items:
            type: object
            properties:
              fieldId:
                type: string
              widgetNamespace:
                type: string
              widgetId:
                type: string
              settings: {}
            required:
              - fieldId
        sidebar:
          type: array
          nullable: true
          items:
            type: object
            properties:
              widgetNamespace:
                type: string
              widgetId:
                type: string
              settings: {}
              disabled:
                type: boolean
            required:
              - widgetNamespace
              - widgetId
    EditorInterface:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/EditorInterfaceSys'
          required:
            - sys
        - $ref: '#/components/schemas/EditorInterfaceFields'
    LinkSys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithId'
        - type: object
          properties:
            type:
              type: string
              enum:
                - Link
            linkType:
              type: string
          required:
            - linkType
    EnvironmentLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: '#/components/schemas/LinkSys'
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - Environment
      required:
        - sys
    PersonalAccessTokenSys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithId'
        - type: object
          properties:
            type:
              type: string
              enum:
                - PersonalAccessToken
        - type: object
          properties:
            expiresAt:
              type: string
              format: date-time
              nullable: true
            lastUsedAt:
              type: string
              format: date-time
              nullable: true
            redactedValue:
              type: string
    PersonalAccessTokenRequestFields:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        expiresIn:
          type: integer
          nullable: true
      required:
        - name
        - scopes
    PersonalAccessTokenFields:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
        revokedAt:
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - scopes
    PersonalAccessToken:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/PersonalAccessTokenSys'
          required:
            - sys
        - $ref: '#/components/schemas/PersonalAccessTokenFields'
    PreviewApiKeySys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersion'
        - type: object
          properties:
            type:
              type: string
              enum:
                - PreviewApiKey
    PreviewApiKeyFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        accessToken:
          type: string
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentLink'
      required:
        - name
        - accessToken
    PreviewApiKey:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/PreviewApiKeySys'
          required:
            - sys
        - $ref: '#/components/schemas/PreviewApiKeyFields'
    RoleSys:
      allOf:
        - $ref: '#/components/schemas/BaseSysWithIdAndVersion'
        - type: object
          properties:
            type:
              type: string
              enum:
                - Role
    RoleFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        permissions:
          type: object
          additionalProperties:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        policies:
          type: array
          items:
            type: object
            properties:
              effect:
                type: string
                enum:
                  - allow
                  - deny
              actions:
                oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              constraint: {}
            required:
              - effect
              - actions
      required:
        - name
        - permissions
    Role:
      allOf:
        - type: object
          properties:
            sys:
              $ref: '#/components/schemas/RoleSys'
          required:
            - sys
        - $ref: '#/components/schemas/RoleFields'
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
      bearerFormat: Contentful Management API Access Token
  responses:
    no-content:
      description: No content
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    error:
      description: An error
      content:
        application/vnd.contentful.management.v1+json:
          schema:
            $ref: '#/components/schemas/Error'
security:
  - accessToken: []
paths:
  /users/me:
    get:
      operationId: getAuthenticatedUser
      summary: Get the authenticated user
      responses:
        200:
          description: The authenticated user
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /users/me/access_tokens:
    post:
      operationId: createPersonalAccessToken
      summary: Create a personal access token
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PersonalAccessTokenRequestFields'
      responses:
        201:
          description: A personal access token
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /users/me/access_tokens/{access_token_id}:
    get:
      operationId: getPersonalAccessToken
      summary: Get a single personal access token
      parameters:
        - in: path
          name: access_token_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: Get a single access token
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /users/me/access_tokens/{access_token_id}/revoked:
    put:
      operationId: revokePersonalAccessToken
      summary: Revoke a personal access token
      parameters:
        - in: path
          name: access_token_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A personal access token
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/api_keys:
    post:
      operationId: createDeliveryApiKey
      summary: Create a delivery api key
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApiKeyRequestFields'
      responses:
        201:
          description: A delivery api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/api_keys/{api_key_id}:
    get:
      operationId: getDeliveryApiKey
      summary: Get a single delivery api key
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: api_key_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A delivery api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    put:
      operationId: updateDeliveryApiKey
      summary: Update a single delivery api key
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: api_key_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Contentful-Version
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApiKeyRequestFields'
      responses:
        200:
          description: A delivery api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: deleteDeliveryApiKey
      summary: Delete a single delivery api key
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: api_key_id
          schema:
            type: string
          required: true
      responses:
        204:
          $ref: '#/components/responses/no-content'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/preview_api_keys/{preview_api_key_id}:
    get:
      operationId: getPreviewApiKey
      summary: Get a single preview api key
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: preview_api_key_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A preview api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/PreviewApiKey'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/environments/{environment_id}/app_installations/{app_definition_id}:
    get:
      operationId: getAppInstallation
      summary: Get one app installation
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: app_definition_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: An app installation
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/AppInstallation'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    put:
      operationId: putAppInstallation
      summary: Install or update an app
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: app_definition_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Contentful-Marketplace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AppInstallationFields'
      responses:
        200:
          description: An app installation
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/AppInstallation'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: deleteAppInstallation
      summary: Uninstall an app
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: app_definition_id
          schema:
            type: string
          required: true
      responses:
        204:
          $ref: '#/components/responses/no-content'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}:
    get:
      operationId: getContentType
      summary: Get a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ContentType'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    put:
      operationId: putContentType
      summary: Update a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Contentful-Version
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ContentTypeRequestFields'
      responses:
        200:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ContentType'
        201:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ContentType'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: deleteContentType
      summary: Delete a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
      responses:
        204:
          $ref: '#/components/responses/no-content'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/published:
    put:
      operationId: activateContentType
      summary: Activate a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Contentful-Version
          schema:
            type: integer
          required: true
      responses:
        200:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ContentType'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: deactivateContentType
      summary: Deactivate a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/ContentType'
        204:
          $ref: '#/components/responses/no-content'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/editor_interface:
    get:
      operationId: getEditorInterface
      summary: Get the editor interface for a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: An editor interface
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/EditorInterface'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    put:
      operationId: putEditorInterface
      summary: Update the editor interface for a content type
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: environment_id
          schema:
            type: string
          required: true
        - in: path
          name: content_type_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Contentful-Version
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EditorInterfaceFields'
      responses:
        200:
          description: An editor interface
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/EditorInterface'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/roles:
    post:
      operationId: createRole
      summary: Create a role
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RoleFields'
      responses:
        201:
          description: A role
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/Role'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
  /spaces/{space_id}/roles/{role_id}:
    get:
      operationId: getRole
      summary: Get a role
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: role_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: A role
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/Role'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    put:
      operationId: updateRole
      summary: Update a role
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: role_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Contentful-Version
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RoleFields'
      responses:
        200:
          description: A role
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: '#/components/schemas/Role'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: deleteRole
      summary: Delete a role
      parameters:
        - in: path
          name: space_id
          schema:
            type: string
          required: true
        - in: path
          name: role_id
          schema:
            type: string
          required: true
      responses:
        204:
          $ref: '#/components/responses/no-content'
        401:
          $ref: '#/components/responses/unauthorized'
        default:
          $ref: '#/components/responses/error'
