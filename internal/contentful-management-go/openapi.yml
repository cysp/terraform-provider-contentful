openapi: "3.0.3"
info:
  title: Contentful Management API
  version: "0.1"
servers:
  - url: https://api.contentful.com
components:
  parameters:
    organization_id:
      in: path
      name: organization_id
      required: true
      schema:
        type: string
    space_id:
      in: path
      name: space_id
      required: true
      schema:
        type: string
    environment_id:
      in: path
      name: environment_id
      required: true
      schema:
        type: string
    access_token_id:
      in: path
      name: access_token_id
      required: true
      schema:
        type: string
    api_key_id:
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    app_definition_id:
      in: path
      name: app_definition_id
      required: true
      schema:
        type: string
    content_type_id:
      in: path
      name: content_type_id
      required: true
      schema:
        type: string
    extension_id:
      in: path
      name: extension_id
      required: true
      schema:
        type: string
    preview_api_key_id:
      in: path
      name: preview_api_key_id
      required: true
      schema:
        type: string
    resource_type_id:
      in: path
      name: resource_type_id
      required: true
      schema:
        type: string
    role_id:
      in: path
      name: role_id
      required: true
      schema:
        type: string
    webhook_definition_id:
      in: path
      name: webhook_definition_id
      required: true
      schema:
        type: string
    x-contentful-version:
      in: header
      name: X-Contentful-Version
      required: true
      schema:
        type: integer
  schemas:
    ErrorSysId:
      type: string
      enum:
        - NotFound
    ErrorSys:
      type: object
      properties:
        type:
          type: string
          enum:
            - Error
        id:
          type: string
      required:
        - type
        - id
    ErrorFields:
      type: object
      properties:
        message:
          type: string
        details: {}
    Error:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ErrorSys"
          required:
            - sys
        - $ref: "#/components/schemas/ErrorFields"
    ApplicationJSONError:
      oneOf:
        - $ref: "#/components/schemas/Error"
    ApplicationVndContentfulManagementV1JSONError:
      oneOf:
        - $ref: "#/components/schemas/Error"
    BaseSys:
      type: object
      properties:
        type:
          type: string
      required:
        - type
    BaseSysWithOrganization:
      allOf:
        - $ref: "#/components/schemas/BaseSys"
        - type: object
          properties:
            organization:
              $ref: "#/components/schemas/OrganizationLink"
          required:
            - organization
    BaseSysWithAppDefinition:
      allOf:
        - $ref: "#/components/schemas/BaseSys"
        - type: object
          properties:
            appDefinition:
              $ref: "#/components/schemas/AppDefinitionLink"
          required:
            - appDefinition
    BaseSysWithResourceProvider:
      allOf:
        - $ref: "#/components/schemas/BaseSys"
        - type: object
          properties:
            resourceProvider:
              $ref: "#/components/schemas/ResourceProviderLink"
          required:
            - resourceProvider
    BaseSysWithSpace:
      allOf:
        - $ref: "#/components/schemas/BaseSys"
        - type: object
          properties:
            space:
              $ref: "#/components/schemas/SpaceLink"
          required:
            - space
    BaseSysWithSpaceEnvironment:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpace"
        - type: object
          properties:
            environment:
              $ref: "#/components/schemas/EnvironmentLink"
          required:
            - environment
    BaseSysWithId:
      allOf:
        - $ref: "#/components/schemas/BaseSys"
        - type: object
          properties:
            id:
              type: string
          required:
            - id
    BaseSysWithVersion:
      allOf:
        - $ref: "#/components/schemas/BaseSys"
        - type: object
          properties:
            version:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
          required:
            - version
    BaseSysWithIdAndVersion:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithId"
        - $ref: "#/components/schemas/BaseSysWithVersion"
    BaseSysWithIdAndVersionAndPublishedVersion:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            publishedVersion:
              type: integer
            publishedAt:
              type: string
              format: date-time
    UserSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - User
    UserFields:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - firstName
        - lastName
    User:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/UserSys"
          required:
            - sys
        - $ref: "#/components/schemas/UserFields"
    ApiKeySys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpace"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - ApiKey
    ApiKeyFields:
      allOf:
        - $ref: "#/components/schemas/ApiKeyRequestFields"
        - type: object
          properties:
            accessToken:
              type: string
            preview_api_key:
              type: object
              properties:
                sys:
                  allOf:
                    - $ref: "#/components/schemas/LinkSys"
                    - type: object
                      properties:
                        linkType:
                          type: string
                          enum:
                            - PreviewApiKey
              required:
                - sys
          required:
            - accessToken
    ApiKeyRequestFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        environments:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentLink"
      required:
        - name
    ApiKey:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ApiKeySys"
          required:
            - sys
        - $ref: "#/components/schemas/ApiKeyFields"
    AppBundleLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - AppBundle
      required:
        - sys
    AppDefinitionSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithOrganization"
        - $ref: "#/components/schemas/BaseSysWithId"
        - type: object
          properties:
            type:
              type: string
              enum:
                - AppDefinition
    AppDefinitionFields:
      type: object
      properties:
        name:
          type: string
        src:
          type: string
        bundle:
          $ref: "#/components/schemas/AppBundleLink"
        locations:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
              fieldTypes:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    linkType:
                      type: string
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        linkType:
                          type: string
                      required:
                        - type
                  required:
                    - type
              navigationItem:
                type: object
                properties:
                  name:
                    type: string
                  path:
                    type: string
                required:
                  - name
                  - path
            required:
              - location
        parameters:
          $ref: "#/components/schemas/AppDefinitionParameters"
      required:
        - name
    AppDefinitionParameters:
      type: object
      properties:
        installation:
          type: array
          items:
            $ref: "#/components/schemas/AppDefinitionParameter"
        instance:
          type: array
          items:
            $ref: "#/components/schemas/AppDefinitionParameter"
    AppDefinitionParameter:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        description:
          type: string
        required:
          type: boolean
        default: {}
        options:
          type: array
          items: {}
        labels:
          type: object
          properties:
            empty:
              type: string
            true:
              type: string
            false:
              type: string
      required:
        - id
        - type
        - name
    AppDefinition:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/AppDefinitionSys"
          required:
            - sys
        - $ref: "#/components/schemas/AppDefinitionFields"
    AppDefinitionLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - AppDefinition
      required:
        - sys
    AppInstallationSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpaceEnvironment"
        - $ref: "#/components/schemas/BaseSysWithAppDefinition"
        - type: object
          properties:
            type:
              type: string
              enum:
                - AppInstallation
    AppInstallationFields:
      type: object
      properties:
        parameters: {}
    AppInstallation:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/AppInstallationSys"
          required:
            - sys
        - $ref: "#/components/schemas/AppInstallationFields"
    ContentTypeSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpaceEnvironment"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersionAndPublishedVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - ContentType
    ContentTypeFields:
      allOf:
        - $ref: "#/components/schemas/ContentTypeRequestFields"
        - type: object
          properties:
            description:
              type: string
              nullable: true
            displayField:
              type: string
              nullable: true
    ContentTypeRequestFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        displayField:
          type: string
        fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              type:
                type: string
              linkType:
                type: string
              items:
                type: object
                properties:
                  type:
                    type: string
                  linkType:
                    type: string
                  validations:
                    type: array
                    items: {}
              localized:
                type: boolean
              omitted:
                type: boolean
              required:
                type: boolean
              disabled:
                type: boolean
              defaultValue: {}
              validations:
                type: array
                items: {}
              allowedResources:
                type: array
                items:
                  $ref: "#/components/schemas/ResourceLink"
                nullable: true
            required:
              - id
              - name
              - type
        metadata:
          $ref: "#/components/schemas/ContentTypeMetadata"
      required:
        - name
        - displayField
        - fields
    ContentTypeMetadata:
      type: object
      properties:
        annotations: {}
        taxonomy:
          type: array
          items:
            $ref: "#/components/schemas/ContentTypeMetadataTaxonomyItem"
    ContentTypeMetadataAnnotationAssignment:
      allOf:
        - $ref: "#/components/schemas/AnnotationLink"
        - type: object
          properties:
            parameters: {}
    ContentTypeMetadataTaxonomyItem:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - TaxonomyConcept
                    - TaxonomyConceptScheme
        required:
          type: boolean
      required:
        - sys
    ContentType:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ContentTypeSys"
          required:
            - sys
        - $ref: "#/components/schemas/ContentTypeFields"
    EditorInterfaceSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpaceEnvironment"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - EditorInterface
            contentType:
              $ref: "#/components/schemas/ContentTypeLink"
          required:
            - contentType
    EditorInterfaceFields:
      type: object
      properties:
        editorLayout:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/EditorInterfaceEditorLayoutItem"
        controls:
          type: array
          nullable: true
          items:
            type: object
            properties:
              fieldId:
                type: string
              widgetNamespace:
                type: string
              widgetId:
                type: string
              settings: {}
            required:
              - fieldId
        groupControls:
          type: array
          nullable: true
          items:
            type: object
            properties:
              groupId:
                type: string
              widgetNamespace:
                type: string
              widgetId:
                type: string
              settings: {}
            required:
              - groupId
        sidebar:
          type: array
          nullable: true
          items:
            type: object
            properties:
              widgetNamespace:
                type: string
              widgetId:
                type: string
              settings: {}
              disabled:
                type: boolean
            required:
              - widgetNamespace
              - widgetId
    EditorInterfaceEditorLayoutItem:
      oneOf:
        - $ref: "#/components/schemas/EditorInterfaceEditorLayoutGroupItem"
        - $ref: "#/components/schemas/EditorInterfaceEditorLayoutFieldItem"
    EditorInterfaceEditorLayoutGroupItem:
      type: object
      properties:
        groupId:
          type: string
        name:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/EditorInterfaceEditorLayoutItem"
      required:
        - groupId
        - name
    EditorInterfaceEditorLayoutFieldItem:
      type: object
      properties:
        fieldId:
          type: string
      required:
        - fieldId
    EditorInterface:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/EditorInterfaceSys"
          required:
            - sys
        - $ref: "#/components/schemas/EditorInterfaceFields"
    ExtensionSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpaceEnvironment"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - Extension
    ExtensionFields:
      type: object
      properties:
        extension:
          type: object
          properties:
            name:
              type: string
            src:
              type: string
            srcdoc:
              type: string
            fieldTypes:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  linkType:
                    type: string
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      linkType:
                        type: string
                    required:
                      - type
                required:
                  - type
            sidebar:
              type: boolean
            parameters:
              $ref: "#/components/schemas/AppDefinitionParameters"
          required:
            - name
            - fieldTypes
        parameters: {}
      required:
        - extension
    Extension:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ExtensionSys"
          required:
            - sys
        - $ref: "#/components/schemas/ExtensionFields"
    LinkSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithId"
        - type: object
          properties:
            type:
              type: string
              enum:
                - Link
            linkType:
              type: string
          required:
            - linkType
    OrganizationLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - Organization
      required:
        - sys
    SpaceLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - Space
      required:
        - sys
    EnvironmentLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - Environment
      required:
        - sys
    AnnotationLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - Annotation
      required:
        - sys
    FunctionLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - Function
      required:
        - sys
    ResourceProviderLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - ResourceProvider
      required:
        - sys
    ContentTypeLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - ContentType
      required:
        - sys
    ResourceLink:
      oneOf:
        - $ref: "#/components/schemas/ContentfulEntryResourceLink"
        - $ref: "#/components/schemas/ExternalResourceLink"
    ContentfulEntryResourceLink:
      type: object
      properties:
        type:
          type: string
          enum:
            - "Contentful:Entry"
        source:
          type: string
        contentTypes:
          type: array
          items:
            type: string
      required:
        - type
        - source
        - contentTypes
    ExternalResourceLink:
      type: object
      properties:
        type:
          type: string
      required:
        - type
    TaxonomyConceptLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - TaxonomyConcept
      required:
        - sys
    TaxonomyConceptSchemeLink:
      type: object
      properties:
        sys:
          allOf:
            - $ref: "#/components/schemas/LinkSys"
            - type: object
              properties:
                linkType:
                  type: string
                  enum:
                    - TaxonomyConceptScheme
      required:
        - sys
    PersonalAccessTokenSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithId"
        - type: object
          properties:
            type:
              type: string
              enum:
                - PersonalAccessToken
        - type: object
          properties:
            expiresAt:
              type: string
              format: date-time
              nullable: true
            lastUsedAt:
              type: string
              format: date-time
              nullable: true
            redactedValue:
              type: string
    PersonalAccessTokenRequestFields:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        expiresIn:
          type: integer
          nullable: true
      required:
        - name
        - scopes
    PersonalAccessTokenFields:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
        revokedAt:
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - scopes
    PersonalAccessToken:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/PersonalAccessTokenSys"
          required:
            - sys
        - $ref: "#/components/schemas/PersonalAccessTokenFields"
    PreviewApiKeySys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpace"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - PreviewApiKey
    PreviewApiKeyFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        accessToken:
          type: string
        environments:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentLink"
      required:
        - name
        - accessToken
    PreviewApiKey:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/PreviewApiKeySys"
          required:
            - sys
        - $ref: "#/components/schemas/PreviewApiKeyFields"
    ResourceProviderRequestSys:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    ResourceProviderSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithId"
        - $ref: "#/components/schemas/BaseSysWithOrganization"
        - $ref: "#/components/schemas/BaseSysWithAppDefinition"
        - type: object
          properties:
            type:
              type: string
              enum:
                - ResourceProvider
    ResourceProviderFields:
      type: object
      properties:
        type:
          type: string
          enum:
            - function
        function:
          $ref: "#/components/schemas/FunctionLink"
      required:
        - type
        - function
    ResourceProviderRequest:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ResourceProviderRequestSys"
          required:
            - sys
        - $ref: "#/components/schemas/ResourceProviderFields"
    ResourceProvider:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ResourceProviderSys"
          required:
            - sys
        - $ref: "#/components/schemas/ResourceProviderFields"
    ResourceTypeSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithId"
        - $ref: "#/components/schemas/BaseSysWithOrganization"
        - $ref: "#/components/schemas/BaseSysWithAppDefinition"
        - $ref: "#/components/schemas/BaseSysWithResourceProvider"
        - type: object
          properties:
            type:
              type: string
              enum:
                - ResourceType
    ResourceTypeFields:
      type: object
      properties:
        name:
          type: string
        defaultFieldMapping:
          $ref: "#/components/schemas/ResourceTypeDefaultFieldMapping"
      required:
        - name
        - defaultFieldMapping
    ResourceTypeDefaultFieldMapping:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        description:
          type: string
        externalUrl:
          type: string
        image:
          type: object
          properties:
            url:
              type: string
            altText:
              type: string
          required:
            - url
        badge:
          type: object
          properties:
            label:
              type: string
            variant:
              type: string
          required:
            - label
            - variant
      required:
        - title
    ResourceType:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/ResourceTypeSys"
          required:
            - sys
        - $ref: "#/components/schemas/ResourceTypeFields"
    RoleSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpace"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - Role
    RoleFields:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        permissions:
          type: object
          additionalProperties:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        policies:
          type: array
          items:
            type: object
            properties:
              effect:
                type: string
                enum:
                  - allow
                  - deny
              actions:
                oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              constraint: {}
            required:
              - effect
              - actions
      required:
        - name
        - permissions
    Role:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/RoleSys"
          required:
            - sys
        - $ref: "#/components/schemas/RoleFields"
    SpaceEnablementSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpace"
        - $ref: "#/components/schemas/BaseSysWithVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - SpaceEnablement
    SpaceEnablementField:
      type: object
      properties:
        enabled:
          type: boolean
      required:
        - enabled
    SpaceEnablementFields:
      type: object
      properties:
        crossSpaceLinks:
          $ref: "#/components/schemas/SpaceEnablementField"
        spaceTemplates:
          $ref: "#/components/schemas/SpaceEnablementField"
        studioExperiences:
          $ref: "#/components/schemas/SpaceEnablementField"
        suggestConcepts:
          $ref: "#/components/schemas/SpaceEnablementField"
    SpaceEnablement:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/SpaceEnablementSys"
          required:
            - sys
        - $ref: "#/components/schemas/SpaceEnablementFields"
    WebhookDefinitionSys:
      allOf:
        - $ref: "#/components/schemas/BaseSysWithSpace"
        - $ref: "#/components/schemas/BaseSysWithIdAndVersion"
        - type: object
          properties:
            type:
              type: string
              enum:
                - WebhookDefinition
    WebhookDefinitionFields:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        topics:
          type: array
          items:
            type: string
        filters:
          type: array
          items:
            $ref: "#/components/schemas/WebhookDefinitionFilter"
          nullable: true
        httpBasicUsername:
          type: string
          nullable: true
        httpBasicPassword:
          type: string
          nullable: true
        headers:
          $ref: "#/components/schemas/WebhookDefinitionHeaders"
        transformation:
          type: object
          properties:
            method:
              type: string
            contentType:
              type: string
            includeContentLength:
              type: boolean
            body: {}
          nullable: true
        active:
          type: boolean
      required:
        - name
        - url
        - topics
    WebhookDefinitionHeaders:
      type: array
      items:
        $ref: "#/components/schemas/WebhookDefinitionHeader"
    WebhookDefinitionHeader:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        secret:
          type: boolean
      required:
        - key
    WebhookDefinitionFilter:
      type: object
      properties:
        not:
          $ref: "#/components/schemas/WebhookDefinitionFilterNot"
        equals:
          $ref: "#/components/schemas/WebhookDefinitionFilterEquals"
        in:
          $ref: "#/components/schemas/WebhookDefinitionFilterIn"
        regexp:
          $ref: "#/components/schemas/WebhookDefinitionFilterRegexp"
    WebhookDefinitionFilterNot:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/WebhookDefinitionFilterEquals"
        in:
          $ref: "#/components/schemas/WebhookDefinitionFilterIn"
        regexp:
          $ref: "#/components/schemas/WebhookDefinitionFilterRegexp"
    WebhookDefinitionFilterEquals:
      type: array
    WebhookDefinitionFilterIn:
      type: array
    WebhookDefinitionFilterRegexp:
      type: array
    WebhookDefinition:
      allOf:
        - type: object
          properties:
            sys:
              $ref: "#/components/schemas/WebhookDefinitionSys"
          required:
            - sys
        - $ref: "#/components/schemas/WebhookDefinitionFields"
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
      bearerFormat: Contentful Management API Access Token
  responses:
    no-content:
      description: No content
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationJSONError"
        application/vnd.contentful.management.v1+json:
          schema:
            $ref: "#/components/schemas/ApplicationVndContentfulManagementV1JSONError"
    error:
      description: An error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationJSONError"
        application/vnd.contentful.management.v1+json:
          schema:
            $ref: "#/components/schemas/ApplicationVndContentfulManagementV1JSONError"
security:
  - accessToken: []
paths:
  /users/me:
    get:
      operationId: getAuthenticatedUser
      summary: Get the authenticated user
      responses:
        200:
          description: The authenticated user
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /users/me/access_tokens:
    post:
      operationId: createPersonalAccessToken
      summary: Create a personal access token
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/PersonalAccessTokenRequestFields"
      responses:
        2XX:
          description: A personal access token
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/PersonalAccessToken"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /users/me/access_tokens/{access_token_id}:
    parameters:
      - $ref: "#/components/parameters/access_token_id"
    get:
      operationId: getPersonalAccessToken
      summary: Get a single personal access token
      responses:
        200:
          description: Get a single access token
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/PersonalAccessToken"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /users/me/access_tokens/{access_token_id}/revoked:
    parameters:
      - $ref: "#/components/parameters/access_token_id"
    put:
      operationId: revokePersonalAccessToken
      summary: Revoke a personal access token
      responses:
        2XX:
          description: A personal access token
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/PersonalAccessToken"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/enablements:
    parameters:
      - $ref: "#/components/parameters/space_id"
    get:
      operationId: getSpaceEnablements
      summary: Get enablements for a space
      responses:
        200:
          description: Enablements for a space
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceEnablement"
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/SpaceEnablement"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putSpaceEnablements
      summary: Update enablements for a space
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/SpaceEnablementFields"
      responses:
        2XX:
          description: Enablements for a space
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/SpaceEnablement"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/api_keys:
    parameters:
      - $ref: "#/components/parameters/space_id"
    post:
      operationId: createDeliveryApiKey
      summary: Create a delivery api key
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/ApiKeyRequestFields"
      responses:
        2XX:
          description: A delivery api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ApiKey"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/api_keys/{api_key_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/api_key_id"
    get:
      operationId: getDeliveryApiKey
      summary: Get a single delivery api key
      responses:
        200:
          description: A delivery api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ApiKey"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: updateDeliveryApiKey
      summary: Update a single delivery api key
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/api_key_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/ApiKeyRequestFields"
      responses:
        2XX:
          description: A delivery api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ApiKey"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteDeliveryApiKey
      summary: Delete a single delivery api key
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/preview_api_keys/{preview_api_key_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/preview_api_key_id"
    get:
      operationId: getPreviewApiKey
      summary: Get a single preview api key
      responses:
        200:
          description: A preview api key
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/PreviewApiKey"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /organizations/{organization_id}/app_definitions:
    parameters:
      - $ref: "#/components/parameters/organization_id"
    post:
      operationId: createAppDefinition
      summary: Create an app definition
      parameters:
        - $ref: "#/components/parameters/organization_id"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/AppDefinitionFields"
      responses:
        2XX:
          description: An app definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/AppDefinition"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /organizations/{organization_id}/app_definitions/{app_definition_id}:
    parameters:
      - $ref: "#/components/parameters/organization_id"
      - $ref: "#/components/parameters/app_definition_id"
    get:
      operationId: getAppDefinition
      summary: Get one app definition
      responses:
        200:
          description: An app definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/AppDefinition"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putAppDefinition
      summary: Create or update an app definition
      parameters:
        - $ref: "#/components/parameters/organization_id"
        - $ref: "#/components/parameters/app_definition_id"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/AppDefinitionFields"
      responses:
        2XX:
          description: An app definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/AppDefinition"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteAppDefinition
      summary: Delete an app definition
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider:
    parameters:
      - $ref: "#/components/parameters/organization_id"
      - $ref: "#/components/parameters/app_definition_id"
    get:
      operationId: getAppDefinitionResourceProvider
      summary: Get one app resource provider definition
      responses:
        200:
          description: An app resource provider definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ResourceProvider"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putAppDefinitionResourceProvider
      summary: Create or update an app resource provider definition
      parameters:
        - $ref: "#/components/parameters/organization_id"
        - $ref: "#/components/parameters/app_definition_id"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/ResourceProviderRequest"
      responses:
        2XX:
          description: An app resource provider definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ResourceProvider"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteAppDefinitionResourceProvider
      summary: Delete an app resource provider definition
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /organizations/{organization_id}/app_definitions/{app_definition_id}/resource_provider/resource_types/{resource_type_id}:
    parameters:
      - $ref: "#/components/parameters/organization_id"
      - $ref: "#/components/parameters/app_definition_id"
      - $ref: "#/components/parameters/resource_type_id"
    get:
      operationId: getAppDefinitionResourceType
      summary: Get one app resource ttype definition
      responses:
        200:
          description: An app resource type definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ResourceType"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putAppDefinitionResourceType
      summary: Create or update an app resource provider type definition
      parameters:
        - $ref: "#/components/parameters/organization_id"
        - $ref: "#/components/parameters/app_definition_id"
        - $ref: "#/components/parameters/resource_type_id"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/ResourceTypeFields"
      responses:
        2XX:
          description: An app resource provider type definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ResourceType"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteAppDefinitionResourceType
      summary: Delete an app resource provider definition
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/environments/{environment_id}/app_installations/{app_definition_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/environment_id"
      - $ref: "#/components/parameters/app_definition_id"
    get:
      operationId: getAppInstallation
      summary: Get one app installation
      responses:
        200:
          description: An app installation
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/AppInstallation"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putAppInstallation
      summary: Install or update an app
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/environment_id"
        - $ref: "#/components/parameters/app_definition_id"
        - in: header
          name: X-Contentful-Marketplace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/AppInstallationFields"
      responses:
        2XX:
          description: An app installation
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/AppInstallation"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteAppInstallation
      summary: Uninstall an app
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/environment_id"
      - $ref: "#/components/parameters/content_type_id"
    get:
      operationId: getContentType
      summary: Get a content type
      responses:
        200:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ContentType"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putContentType
      summary: Update a content type
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/environment_id"
        - $ref: "#/components/parameters/content_type_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/ContentTypeRequestFields"
      responses:
        2XX:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ContentType"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteContentType
      summary: Delete a content type
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/published:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/environment_id"
      - $ref: "#/components/parameters/content_type_id"
    put:
      operationId: activateContentType
      summary: Activate a content type
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/environment_id"
        - $ref: "#/components/parameters/content_type_id"
        - $ref: "#/components/parameters/x-contentful-version"
      responses:
        2XX:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ContentType"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deactivateContentType
      summary: Deactivate a content type
      responses:
        200:
          description: A content type
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/ContentType"
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}/editor_interface:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/environment_id"
      - $ref: "#/components/parameters/content_type_id"
    get:
      operationId: getEditorInterface
      summary: Get the editor interface for a content type
      responses:
        200:
          description: An editor interface
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/EditorInterface"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putEditorInterface
      summary: Update the editor interface for a content type
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/environment_id"
        - $ref: "#/components/parameters/content_type_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/EditorInterfaceFields"
      responses:
        2XX:
          description: An editor interface
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/EditorInterface"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/environments/{environment_id}/extensions/{extension_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/environment_id"
      - $ref: "#/components/parameters/extension_id"
    get:
      operationId: getExtension
      summary: Get a single extension
      responses:
        200:
          description: An extension
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/Extension"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: putExtension
      summary: Create or update an extension
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/environment_id"
        - $ref: "#/components/parameters/extension_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/ExtensionFields"
      responses:
        2XX:
          description: An extension
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/Extension"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteExtension
      summary: Delete an extension
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/roles:
    parameters:
      - $ref: "#/components/parameters/space_id"
    post:
      operationId: createRole
      summary: Create a role
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/RoleFields"
      responses:
        2XX:
          description: A role
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/Role"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/roles/{role_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/role_id"
    get:
      operationId: getRole
      summary: Get a role
      responses:
        200:
          description: A role
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/Role"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: updateRole
      summary: Update a role
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/role_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/RoleFields"
      responses:
        2XX:
          description: A role
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/Role"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteRole
      summary: Delete a role
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/webhook_definitions:
    parameters:
      - $ref: "#/components/parameters/space_id"
    post:
      operationId: createWebhookDefinition
      summary: Create a webhook definition
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/WebhookDefinitionFields"
      responses:
        2XX:
          description: A webhook definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/WebhookDefinition"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
  /spaces/{space_id}/webhook_definitions/{webhook_definition_id}:
    parameters:
      - $ref: "#/components/parameters/space_id"
      - $ref: "#/components/parameters/webhook_definition_id"
    get:
      operationId: getWebhookDefinition
      summary: Get a webhook definition
      responses:
        200:
          description: A webhook definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/WebhookDefinition"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: updateWebhookDefinition
      summary: Update a webhook definition
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/webhook_definition_id"
        - $ref: "#/components/parameters/x-contentful-version"
      requestBody:
        required: true
        content:
          application/vnd.contentful.management.v1+json:
            schema:
              $ref: "#/components/schemas/WebhookDefinitionFields"
      responses:
        2XX:
          description: A webhook definition
          content:
            application/vnd.contentful.management.v1+json:
              schema:
                $ref: "#/components/schemas/WebhookDefinition"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
    delete:
      operationId: deleteWebhookDefinition
      summary: Delete a webhook definition
      responses:
        204:
          $ref: "#/components/responses/no-content"
        401:
          $ref: "#/components/responses/unauthorized"
        default:
          $ref: "#/components/responses/error"
